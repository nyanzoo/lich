version: 3

includes:
  backend:
    taskfile: ./backend/Taskfile.yaml
    dir: ./backend

  frontend:
    taskfile: ./frontend/Taskfile.yaml
    dir: ./frontend

  io:
    taskfile: ./io/Taskfile.yaml
    dir: ./io

  net:
    taskfile: ./net/Taskfile.yaml
    dir: ./net

  operator:
    taskfile: ./operator/Taskfile.yaml
    dir: ./operator

  requests:
    taskfile: ./requests/Taskfile.yaml
    dir: ./requests

  example-client:
    taskfile: ./examples/client-test/Taskfile.yaml
    dir: ./examples/client-test

  example-client-bench:
    taskfile: ./examples/client-bench/Taskfile.yaml
    dir: ./examples/client-bench

tasks:
  test:
    cmds:
      - task: backend:test
      - task: frontend:test
      - task: io:test
      - task: net:test
      - task: operator:test
      - task: requests:test

  build-debug:
    cmds:
      - task: backend:build-debug
      - task: frontend:build-debug
      - task: operator:build-debug

  build-release:
    cmds:
      - task: backend:build-release
      - task: frontend:build-release
      - task: operator:build-release

  clippy:
    cmds:
      - task: backend:clippy
      - task: frontend:clippy
      - task: io:clippy
      - task: net:clippy
      - task: operator:clippy
      - task: requests:clippy

  update-deps:
    cmds:
      - task: backend:update-deps
      - task: frontend:update-deps
      - task: io:update-deps
      - task: net:update-deps
      - task: operator:update-deps
      - task: requests:update-deps

  build-all-images:
    cmds:
      - task: backend:build-image
      - task: frontend:build-image
      - task: operator:build-image

  tag-all-images:
    cmds:
      - task: backend:tag-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: frontend:tag-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: operator:tag-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest

  push-all-images:
    cmds:
      - task: backend:push-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: frontend:push-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: operator:push-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest

  k3d-load-images:
    cmds:
      - task: backend:k3d-load-image
        vars:
          CLUSTER: lich
      - task: frontend:k3d-load-image
        vars:
          CLUSTER: lich
      - task: operator:k3d-load-image
        vars:
          CLUSTER: lich

  helm-package:
    cmds:
      - helm package helm

  helm-install:
    cmds:
      - task: helm-package
      - helm install lich lich-0.1.0.tgz --wait

  helm-uninstall:
    cmds:
      - helm uninstall lich

  helm-reinstall:
    cmds:
      - task: helm-uninstall
      - task: helm-install

  deploy:
    cmds:
      - task: build-all-images
      - task: k3d-load-images
      # - task: tag-all-images
      # - task: push-all-images
      - task: helm-install

  redeploy:
    cmds:
      - task: helm-uninstall
      - rm -rf mnt/lich/* | true
      - task: deploy

  redeploy-quick:
    cmds:
      - task: helm-uninstall
      - rm -rf mnt/lich/* | true
      - task: helm-install

  cluster-create:
    cmds:
      - echo "adding $PWD/mnt/lich"
      - mkdir -p $PWD/mnt/lich
      - k3d cluster create lich --volume $PWD/mnt/lich:/opt/lich -p 666:30666
      - kubectl label node k3d-lich-server-0 app=backend

  cluster-delete:
    cmds:
      - k3d cluster delete lich
      - echo "removing $PWD/mnt/lich"
      - rm -rf $PWD/mnt/lich

  cluster-recreate:
    cmds:
      - task: prune-docker
      - task: cluster-delete
      - task: cluster-create

  client-test:
    cmds:
      - task: example-client:put
      - task: example-client:get
      - task: example-client:delete
      - task: example-client:get

  client-bench:
    cmds:
      # - task: example-client-bench:put
      - task: example-client-bench:put_and_get
      # - task: example-client-bench:queue

  get-logs:
    cmds:
      - ./scripts/get-logs.sh

  prune-docker:
    cmds:
      - docker system prune -f -a # clean up all docker images for space
