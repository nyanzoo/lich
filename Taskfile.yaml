version: 3

includes:
  backend:
    taskfile: ./backend/Taskfile.yaml
    dir: ./backend

  frontend:
    taskfile: ./frontend/Taskfile.yaml
    dir: ./frontend

  operator:
    taskfile: ./operator/Taskfile.yaml
    dir: ./operator

  example-client:
    taskfile: ./examples/client-test/Taskfile.yaml
    dir: ./examples/client-test

  example-client-bench:
    taskfile: ./examples/client-bench/Taskfile.yaml
    dir: ./examples/client-bench

tasks:
  test:
    cmds:
      - task: backend:test
      - task: frontend:test
      - task: operator:test

  build-debug:
    cmds:
      - task: backend:build-debug
      - task: frontend:build-debug
      - task: operator:build-debug

  build-release:
    cmds:
      - task: backend:build-release
      - task: frontend:build-release
      - task: operator:build-release

  clippy:
    cmds:
      - task: backend:clippy
      - task: frontend:clippy
      - task: operator:clippy

  build-all-images:
    cmds:
      - task: backend:build-image
      - task: frontend:build-image
      - task: operator:build-image

  tag-all-images:
    cmds:
      - task: backend:tag-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: frontend:tag-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: operator:tag-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest

  push-all-images:
    cmds:
      - task: backend:push-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: frontend:push-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest
      - task: operator:push-image
        vars:
          REGISTRY: nyanzebra
          VERSION: latest

  k3d-load-images:
    cmds:
      - task: backend:k3d-load-image
        vars:
          CLUSTER: lich
      - task: frontend:k3d-load-image
        vars:
          CLUSTER: lich
      - task: operator:k3d-load-image
        vars:
          CLUSTER: lich

  helm-package:
    cmds:
      - helm package helm

  helm-install:
    cmds:
      - task: helm-package
      - helm install lich lich-0.1.0.tgz

  helm-uninstall:
    cmds:
      - helm uninstall lich

  helm-reinstall:
    cmds:
      - task: helm-uninstall
      - task: helm-install

  deploy:
    cmds:
      - task: build-all-images
      - task: k3d-load-images
      # - task: tag-all-images
      # - task: push-all-images
      - task: helm-install

  redeploy:
    cmds:
      - task: helm-uninstall
      - task: deploy

  cluster-create:
    cmds:
      - k3d cluster create lich --volume /tmp/lich:/opt/lich #-p 6666:6666
      - kubectl label node k3d-lich-server-0 app=backend

  cluster-delete:
    cmds:
      - k3d cluster delete lich

  cluster-recreate:
    cmds:
      - task: prune-docker
      - task: cluster-delete
      - task: cluster-create

  client-test:
    cmds:
      - task: example-client:put
      - task: example-client:get
      - task: example-client:delete
      - task: example-client:get

  client-bench:
    cmds:
      # - task: example-client-bench:put
      - task: example-client-bench:put_and_get

  get-logs:
    cmds:
      - ./scripts/get-logs.sh

  prune-docker:
    cmds:
      - docker system prune -f -a # clean up all docker images for space
